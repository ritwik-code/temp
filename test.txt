✅ TiffViewer.jsx
import React, { useEffect, useRef } from 'react';
import * as UTIF from 'utif';

interface TiffViewerProps {
  fileUrl: string;
  pageIndex?: number;
}

const TiffViewer: React.FC<TiffViewerProps> = ({ fileUrl, pageIndex = 0 }) => {
  const canvasRef = useRef<HTMLCanvasElement>(null);

  useEffect(() => {
    const loadTIFF = async () => {
      try {
        const response = await fetch(fileUrl);
        const buffer = await response.arrayBuffer();

        const ifds = UTIF.decode(buffer);
        UTIF.decodeImage(buffer, ifds[pageIndex]);

        const rgba = UTIF.toRGBA8(ifds[pageIndex]); // Uint8ClampedArray
        const { width, height } = ifds[pageIndex];

        const canvas = canvasRef.current;
        if (canvas && width && height) {
          canvas.width = width;
          canvas.height = height;
          const ctx = canvas.getContext('2d');
          const imageData = new ImageData(rgba, width, height);
          ctx?.putImageData(imageData, 0, 0);
        }
      } catch (err) {
        console.error('Failed to render TIFF:', err);
      }
    };

    loadTIFF();
  }, [fileUrl, pageIndex]);

  return <canvas ref={canvasRef} />;
};

export default TiffViewer;

export default TiffViewer;
✅ Usage
jsx
Copy
Edit
import React from 'react';
import TiffViewer from './TiffViewer';

function App() {
  return (
    <div className="App">
      <h2>TIFF Image Viewer</h2>
      <TiffViewer fileUrl="/images/sample.tif" />
    </div>
  );
}

export default App;