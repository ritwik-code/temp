import React, { useRef, useState } from 'react';
import * as UTIF from 'utif';

const TiffUploader: React.FC = () => {
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const [error, setError] = useState<string | null>(null);

  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (!file) return;

    try {
      const arrayBuffer = await file.arrayBuffer();

      const ifds = UTIF.decode(arrayBuffer);
      if (ifds.length === 0) {
        setError('No images found in the TIFF file.');
        return;
      }

      UTIF.decodeImage(arrayBuffer, ifds[0]); // First page
      const rgba = UTIF.toRGBA8(ifds[0]);
      const { width, height } = ifds[0];

      const canvas = canvasRef.current;
      if (canvas && width && height) {
        canvas.width = width;
        canvas.height = height;
        const ctx = canvas.getContext('2d');
        const imageData = new ImageData(rgba, width, height);
        ctx?.putImageData(imageData, 0, 0);
        setError(null); // Clear previous errors
      }
    } catch (err) {
      console.error('Failed to load TIFF:', err);
      setError('Failed to decode the TIFF file.');
    }
  };

  return (
    <div>
      <input type="file" accept=".tif,.tiff" onChange={handleFileChange} />
      {error && <p style={{ color: 'red' }}>{error}</p>}
      <canvas ref={canvasRef} style={{ marginTop: '1rem', border: '1px solid #ccc' }} />
    </div>
  );
};

export default TiffUploader;